<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menustart1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///globalvars and building


x=12
y=-sprite_get_height(spr_menustart1);


ground=instance_create(0,tracerY+sprite_get_height(spr_trex),obj_floor)
with ground {
    image_xscale=40
}

if !instance_exists(obj_trexmenu){
instance_create(x,y,obj_trexmenu)};

instance_create(x,room_height,obj_menu_2);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Surface to draw on and vars for it
/*
srf_startmenu=surface_create(sprite_get_width(spr_menu),sprite_get_height(spr_menu))
globalvar menusize;
*/
menuin=1;
menusize=0;
menuout=0;
butoneffect=0;
tutorial=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Buttons
if tutorial=false{
// Exit buton
if mouse_check_button_released(mb_left) and
    mouse_x &gt; 80 and
    mouse_x &lt; 300 and
    mouse_y &gt; 125 and mouse_y&lt;220 
    {
        butoneffect=0;
        menuout=1;
        if instance_exists(obj_menu_2){
        obj_menu_2.menuout=1}
        audio_play_sound(snd_click,1,0);
    }
// Dificulty buton
 if mouse_check_button_released(mb_left) and
    mouse_x &gt; 300 and
    mouse_x &lt; 520 and
    mouse_y &gt; 125 and mouse_y&lt;220 
    {
        if dific=4 {dific=0} else {dific++}
    }   
// Shop buton
else if mouse_check_button_released(mb_left) and
    mouse_x &gt; 520 and
    mouse_x &lt; 740 and
    mouse_y &gt; 125 and mouse_y&lt;220 
    {
        butoneffect=2;
        menuout=1;
        if instance_exists(obj_menu_2){
        obj_menu_2.menuout=1}
        audio_play_sound(snd_click,1,0);
    }
// Start buton
else if mouse_check_button_released(mb_left) and
    mouse_x &gt; 740 and
    mouse_x &lt; 960 and
    mouse_y &gt; 125 and mouse_y&lt;220 
    {
        butoneffect=1;
        menuout=1;
        if instance_exists(obj_menu_2){
        obj_menu_2.menuout=1};
        audio_play_sound(snd_click,1,0);
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing

draw_set_color(c_black);
draw_set_font(fnt_OWmini);

//In and out
if menuin=1 {
menuout=0
if y&lt;-10 {y+=10}
else if y&gt;=-10 {menuin=0}
    
    
}
if menuout=1 {
menuin=0
if y&gt;-300 {y-=10}
else if y&lt;=-300 {
    bannercontrol=2;
    switch butoneffect {
        case 0: //Exit
        game_end()
        break;
        case 1: //Start
        instance_create(selected_x,tracerY,dinobase[selected,5])
        if selected=6{
            var dining;
            dining=instance_create(-100,tracerY,obj_compi_clone);
            with dining {starting=1};
        }
        instance_create(room_width/2,room_height/2,obj_startcount)
        break;
        case 2: //Shop
        instance_create(0,0,obj_shop)
        break;
    }
    instance_destroy();;
    if object_exists(obj_menu_2) {
        with obj_menu_2 {instance_destroy()};
    }
}}
/*
if !surface_exists (srf_startmenu) {
    srf_startmenu=surface_create(sprite_get_width(spr_menu),sprite_get_height(spr_menu));
};

// // Drawing on the surface
surface_set_target(srf_startmenu);
draw_sprite(spr_menu,0,surface_get_width(srf_startmenu)/2,surface_get_height(srf_startmenu)/2);
surface_reset_target();
draw_surface(srf_startmenu,x,y);
surface_set_target(srf_startmenu);
draw_text(180,572,ltext[lang,1]);
draw_text(400,572,ltext[lang,2]);
draw_text(620,572,ltext[lang,3]);
draw_text(840,572,ltext[lang,4])
draw_set_font(fnt_OW);
draw_text(520,465,ltext[lang,0]);
draw_set_font(fnt_OWmini);
surface_reset_target();
// // Drawing the surface in the screen
draw_surface(srf_startmenu,x,y);
*/
draw_self();
image_index=lang;

//Dificulty stars
draw_sprite(spr_star,1,room_width/2,y+215)
if dific&gt;0 {draw_sprite(spr_star,1,room_width/2-100,y+215)}
if dific&gt;1 {draw_sprite(spr_star,1,room_width/2+100,y+215)}
if dific&gt;2 {draw_sprite(spr_star,1,room_width/2-200,y+215)}
if dific&gt;3 {draw_sprite(spr_star,1,room_width/2+200,y+215)}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
