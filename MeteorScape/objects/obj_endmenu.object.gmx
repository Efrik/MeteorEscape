<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_endmenu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-550</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Saving fakemoney
coins=coins+earning;
if win=1 {coins+=+(dific*4+4)};
ini_open("coins.ini");
ini_write_real("fakemoney","coins",coins);
ini_close();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Sureface to draw on and variables for it
//srf_endmenu=surface_create(sprite_get_width(spr_endmenu),sprite_get_height(spr_endmenu))
menuin=1;
endsize=0;
menuout=0;
x=room_width/2;
y=-500;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//surface_free (srf_endmenu);
with obj_earn {instance_destroy()};


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menuout=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing

draw_set_font(fnt_OW);
draw_set_color(c_black);
draw_set_font(fnt_OWmini);

//In and out
if menuin=1 {
menuout=0
if y&lt;room_height/2 {y+=25}else{menuin=0}
}
if menuout=1 {
menuin=0
if y&gt;-700 {y-=25}
else if y&lt;=-700 {
announce++
ini_open("coins.ini");
ini_write_real("ads","ads",announce);
ini_close();
game_restart();
}}

draw_self();
if !win {
    draw_text(x-sprite_get_width(spr_coin)/2,y,ltext[lang,7]+string_format(earning,3,0));
    draw_sprite(spr_coin,-1,x+string_width(ltext[lang,7]+string_format(earning,3,0))/2,y)
}else{
    draw_text_ext(x,y-50,ltext[lang,9],font_get_size(fnt_OW)+4,sprite_get_width(spr_endmenu)-100);
    draw_text(x-sprite_get_width(spr_coin)/2,y+50,ltext[lang,13]+string_format(earning,3,0));
    draw_sprite(spr_coin,-1,x+string_width(ltext[lang,13]+string_format(earning+dific*4+4,3,0))/2,y-sprite_get_height(spr_coin)/2+50)
    draw_text(x-sprite_get_width(spr_coin)/2,y+100,ltext[lang,6]+string_format(dific*4+4,3,0));
    draw_sprite(spr_coin,-1,x+string_width(ltext[lang,6]+string_format(earning+dific*4+4,3,0))/2,y-sprite_get_height(spr_coin)/2+100)
}
/*
if !surface_exists (srf_endmenu) {
    srf_endmenu=surface_create(sprite_get_width(spr_endmenu),sprite_get_height(spr_endmenu));
};
// // Drawing on the surface
surface_set_target(srf_endmenu);
draw_set_valign(fa_center)
draw_sprite(spr_endmenu,0,0,0);
surface_reset_target();
draw_surface(srf_endmenu,x,y)
surface_set_target(srf_endmenu);
if win=0 {
draw_text_ext(surface_get_width(srf_endmenu)/2-sprite_get_width(spr_coin)/2,sprite_get_height(spr_endmenu)/2-50,ltext[lang,7]+string_format(earning,3,0),font_get_size(fnt_OW+4),sprite_get_width(spr_endmenu)-100);
draw_sprite(spr_coin,-1,surface_get_width(srf_endmenu)/2+string_width(ltext[lang,7]+string_format(earning,3,0))/2,surface_get_height(srf_endmenu)/2-50)
} else if win =1 {
draw_text_ext(surface_get_width(srf_endmenu)/2,surface_get_height(srf_endmenu)/2-50,ltext[lang,9],font_get_size(fnt_OW)+4,sprite_get_width(spr_endmenu)-100);
draw_text(surface_get_width(srf_endmenu)/2-sprite_get_width(spr_coin)/2,surface_get_height(srf_endmenu)/2+50,ltext[lang,5]+string_format(earning,3,0));
draw_sprite(spr_coin,-1,surface_get_width(srf_endmenu)/2+string_width(ltext[lang,5]+string_format(earning+dific*4+4,3,0))/2,surface_get_height(srf_endmenu)/2-sprite_get_height(spr_coin)/2+50)
draw_text(surface_get_width(srf_endmenu)/2-sprite_get_width(spr_coin)/2,surface_get_height(srf_endmenu)/2+100,ltext[lang,6]+string_format(dific*4+4,3,0));
draw_sprite(spr_coin,-1,surface_get_width(srf_endmenu)/2+string_width(ltext[lang,6]+string_format(earning+dific*4+4,3,0))/2,surface_get_height(srf_endmenu)/2-sprite_get_height(spr_coin)/2+100)
//draw_text(surface_get_width(srf_endmenu)/2-sprite_get_width(spr_coin)/2,surface_get_height(srf_endmenu)/2+125,ltext[lang,6]+string_format(dific*3,2,0));
//draw_sprite(spr_coin,-1,surface_get_width(srf_endmenu)/2+string_width(ltext[lang,5]+string_format(earning,2,0))/2,surface_get_height(srf_endmenu)/2-sprite_get_height(spr_coin)/2+125)

}
surface_reset_target();
// // Drawing the surface in the screen
draw_surface(srf_endmenu,x,y);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
